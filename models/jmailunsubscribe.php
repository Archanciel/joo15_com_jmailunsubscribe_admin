<?php

/**
 * Joomla! 1.5 component jmailunsubscribe
 * Code generated by : Joomla! 1.5 MVC Component Code Generator
 * http://www.hopper-intermedia.de
 * date generated: 2014-12-15
 * @version 0.8
 * @author Jean-Pierre Schnyder 
 * @package com_jmailunsubscribe
 * @license http://opensource.org/licenses/gpl-license.php GNU Public License
 **/

// no direct access
defined ( '_JEXEC' ) or die ( 'Restricted access' );

jimport ( 'joomla.application.component.model' );
class JMailUnsubscribeModelJMailUnsubscribe extends JModel {
	/**
	 * JMailUnsubscribe array
	 *
	 * @var array
	 */
	var $_data = null;
	/**
	 * JMailUnsubscribe total
	 *
	 * @var integer
	 */
	var $_total = null;
	/**
	 * Pagination object
	 *
	 * @var object
	 */
	var $_pagination = null;
	/**
	 * Constructor
	 */
	function __construct() {
		parent::__construct ();
		global $mainframe, $option;
		// Get the pagination request variables
		$limit = $mainframe->getUserStateFromRequest ( 'global.list.limit', 'limit', $mainframe->getCfg ( 'list_limit' ), 'int' );
		$limitstart = $mainframe->getUserStateFromRequest ( $option . 'limitstart', 'limitstart', 0, 'int' );
		$this->setState ( 'limit', $limit );
		$this->setState ( 'limitstart', $limitstart );
	}
	/**
	 * Method to get jmailunsubscribe item data
	 *
	 * @access public
	 * @return array
	 */
	function getData() {
		// Lets load the content if it doesn't already exist
		if (empty ( $this->_data )) {
			$query = $this->_buildQuery ();
			$this->_data = $this->_getList ( $query, $this->getState ( 'limitstart' ), $this->getState ( 'limit' ) );
		}
		return $this->_data;
	}
	/**
	 * Method to get the total number of jmailunsubscribe items
	 *
	 * @access public
	 * @return integer
	 */
	function getTotal() {
		// Lets load the content if it doesn't already exist
		if (empty ( $this->_total )) {
			$query = $this->_buildQuery ();
			$this->_total = $this->_getListCount ( $query );
		}
		return $this->_total;
	}
	/**
	 * Method to get a pagination object for jmailunsubscribe
	 *
	 * @access public
	 * @return integer
	 */
	function getPagination() {
		// Lets load the content if it doesn't already exist
		if (empty ( $this->_pagination )) {
			jimport ( 'joomla.html.pagination' );
			$this->_pagination = new JPagination ( $this->getTotal (), $this->getState ( 'limitstart' ), $this->getState ( 'limit' ) );
		}
		return $this->_pagination;
	}
	function _buildQuery() {
		// Get the WHERE and ORDER BY clauses for the query
		$where = $this->_buildContentWhere ();
		$orderby = $this->_buildContentOrderBy ();
		
		// WARNING: do not put a semi-column at the end of the query !!!
		$query = '  SELECT 
						u.username as user_pseudo, u.name as user_name, u.email as user_email, u.registerdate as user_regdate, u.lastvisitdate as user_lastvisit, a.id as alert_id, t.alert_name as alert_name, a.option as alert_option 
					FROM
						#__email_alert as a
					LEFT JOIN
						#__users as u
					ON  
						a.user_id = u.id
					LEFT JOIN
						#__email_alert_type as t 
					ON
						a.alert_id = t.id' . $where . $orderby;
		return $query;
	}
	function _buildContentOrderBy() {
		global $mainframe, $option;
		$filter_order = $mainframe->getUserStateFromRequest ( $option . 'filter_order', 'filter_order', 'user_name', 'cmd' );
		$filter_order_Dir = $mainframe->getUserStateFromRequest ( $option . 'filter_order_Dir', 'filter_order_Dir', '', 'word' );
		if ($filter_order == 'user_name') {
			$orderby = ' ORDER BY user_name ' . $filter_order_Dir;
		} else {
			$orderby = ' ORDER BY ' . $filter_order . $filter_order_Dir . ' , user_name ';
		}
		return $orderby;
	}
	function _buildContentWhere() {
		global $mainframe, $option;
		$search = $mainframe->getUserStateFromRequest ( $option . 'search', 'search', '', 'string' );
		$search = JString::strtolower ( $search );
		$where = '';
		if ($search) {
			$where = array ();
			$where [] = 'LOWER(u.username) LIKE ' . $this->_db->Quote ( '%' . $search . '%' );
			$where [] = 'LOWER(u.name) LIKE ' . $this->_db->Quote ( '%' . $search . '%' );
			$where [] = 'LOWER(u.email) LIKE ' . $this->_db->Quote ( '%' . $search . '%' );
			$where = ' WHERE ' . implode ( ' OR ', $where );
		}
		return $where;
	}
}
